{"version":3,"sources":["redux/auth/auth-operation.js","redux/auth/auth-selectors.js","components/pages/PrivateRoute.js","components/pages/PublicRoute.js","components/appBar/userMenu.js","components/appBar/AuthNav.js","components/appBar/appBar.js","App.js","reportWebVitals.js","redux/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/action.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingLoad","isFetchingLoad","PrivateRoute","children","routeProps","isLoggeIn","useSelector","to","PublicRoute","restricted","routePorps","shouldRedirect","UserMenu","dispatch","useDispatch","onClick","authOperations","AppBar","exact","className","activeClassName","HomePages","lazy","Register","Login","Contacts","App","useEffect","authOperation","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","fetchSubmitSuccess","_state","payload","formSubmitSuccess","formDeleteSuccess","action","filter","contact","id","filterContacts","loading","formSubmitRequest","formSubmitError","formDeleteRequest","formDeleteError","fetchSubmitRequest","fetchSubmitError","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","reducerContact","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction"],"mappings":"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","file":"static/js/main.521bd13c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n});\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n});\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {}\r\n  },\r\n);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logIn, logOut, fetchCurrentUser };\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getUsername = state => state.auth.user.name;\r\nexport const getIsFetchingLoad = state => state.auth.isFetchingLoad;\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingLoad,\r\n};\r\nexport default authSelectors;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLoggeIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggeIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  ...routePorps\r\n}) {\r\n  const isLoggeIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggeIn && restricted;\r\n  return (\r\n    <Route {...routePorps}>\r\n      {shouldRedirect ? <Redirect to=\"/Contacts\" /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operation';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  return (\r\n    <>\r\n      <h1>Hello {name}! </h1>\r\n      <button onClick={() => dispatch(authOperations.logOut())}>LogOut</button>\r\n    </>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport '../css/link.css';\r\nexport default function AppBar() {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className=\"link\"\r\n        activeClassName=\"activeLink\"\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink to=\"/login\" exact className=\"link\" activeClassName=\"activeLink\">\r\n        Login\r\n      </NavLink>\r\n    </>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport UserMenu from './userMenu';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport AuthNav from '../appBar/AuthNav';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\r\n        HomePage\r\n      </NavLink>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <UserMenu />\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            className=\"link\"\r\n            activeClassName=\"activeLink\"\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </>\r\n      ) : (\r\n        <AuthNav />\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { lazy, Suspense } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PrivateRoute from './components/pages/PrivateRoute';\r\nimport PublicRoute from './components/pages/PublicRoute';\r\nimport authOperation from 'redux/auth/auth-operation';\r\nimport AppBar from './components/appBar/appBar';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nconst HomePages = lazy(() => import('./components/pages/homeP'));\r\nconst Register = lazy(() => import('./components/pages/register'));\r\nconst Login = lazy(() => import('./components/pages/login'));\r\nconst Contacts = lazy(() => import('./components/pages/contactsPage'));\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingLoad = useSelector(authSelectors.getIsFetchingLoad);\r\n  useEffect(() => {\r\n    dispatch(authOperation.fetchCurrentUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className=\"App\">\r\n      {isFetchingLoad ? (\r\n        <h1>какая-то страница</h1>\r\n      ) : (\r\n        <>\r\n          <AppBar />\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Switch>\r\n              <PublicRoute path=\"/\" exact>\r\n                <HomePages />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/Register\" restricted>\r\n                <Register />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/Login\" restricted>\r\n                <Login />\r\n              </PublicRoute>\r\n              <PrivateRoute path=\"/Contacts\">\r\n                <Contacts />\r\n              </PrivateRoute>\r\n            </Switch>\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  formSubmitRequest,\r\n  formSubmitSuccess,\r\n  formSubmitError,\r\n  filterContacts,\r\n  formDeleteRequest,\r\n  formDeleteSuccess,\r\n  formDeleteError,\r\n  fetchSubmitRequest,\r\n  fetchSubmitSuccess,\r\n  fetchSubmitError,\r\n} from './action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchSubmitSuccess]: (_state, { payload }) => payload,\r\n  [formSubmitSuccess]: (state, { payload }) => [...state, payload],\r\n  [formDeleteSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [formSubmitRequest]: () => true,\r\n  [formSubmitSuccess]: () => false,\r\n  [formSubmitError]: () => false,\r\n  [formDeleteRequest]: () => true,\r\n  [formDeleteSuccess]: () => false,\r\n  [formDeleteError]: () => false,\r\n  [fetchSubmitRequest]: () => true,\r\n  [fetchSubmitSuccess]: () => false,\r\n  [fetchSubmitError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operation';\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingLoad: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingLoad = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingLoad = false;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingLoad = false;\r\n    },\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport reducerContact from './reducer';\r\nimport authReducer from './auth/auth-slice';\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: reducerContact,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchSubmitRequest = createAction('contacts/fetchSubmitRequest');\r\nexport const fetchSubmitSuccess = createAction('contacts/fetchSubmitSuccess');\r\nexport const fetchSubmitError = createAction('contacts/fetchSubmitError');\r\n\r\nexport const formSubmitRequest = createAction('contacts/formSubmitRequest');\r\nexport const formSubmitSuccess = createAction('contacts/formSubmitSuccess');\r\nexport const formSubmitError = createAction('contacts/formSubmitError');\r\n\r\nexport const formDeleteRequest = createAction('contacts/formDeleteRequest');\r\nexport const formDeleteSuccess = createAction('contacts/formDeleteSuccess');\r\nexport const formDeleteError = createAction('contacts/formDeleteError');\r\n\r\nexport const deleteContacts = createAction('contacts/delete');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n"],"sourceRoot":""}