(this["webpackJsonpgoit-react-hw-08-phonebook"]=this["webpackJsonpgoit-react-hw-08-phonebook"]||[]).push([[5],{79:function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var n=r(33);function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,a=!1,o=void 0;try{for(var c,s=e[Symbol.iterator]();!(n=(c=s.next()).done)&&(r.push(c.value),!t||r.length!==t);n=!0);}catch(i){a=!0,o=i}finally{try{n||null==s.return||s.return()}finally{if(a)throw o}}return r}}(e,t)||Object(n.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},84:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return i}));var n=r(79),a=r(0),o=r(7),c=r(15),s=(r(21),r(1));function i(){var e=Object(o.c)(),t=Object(a.useState)(""),r=Object(n.a)(t,2),i=r[0],l=r[1],u=Object(a.useState)(""),b=Object(n.a)(u,2),d=b[0],j=b[1],m=Object(a.useState)(""),f=Object(n.a)(m,2),h=f[0],p=f[1],O=function(e){var t=e.target,r=t.name,n=t.value;switch(r){case"name":return l(n);case"email":return j(n);case"password":return p(n);default:return}};return Object(s.jsx)(s.Fragment,{children:Object(s.jsx)("form",{onSubmit:function(t){t.preventDefault(),e(c.a.register({name:i,email:d,password:h})),l(""),j(""),p("")},autoComplete:"off",children:Object(s.jsxs)("div",{class:"form-group",children:[Object(s.jsx)("div",{class:"form-group",children:Object(s.jsxs)("label",{children:["Name",Object(s.jsx)("input",{class:"form-control",type:"name",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"\u0418\u043c\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0431\u0443\u043a\u0432, \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\u0430, \u0442\u0438\u0440\u0435 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",required:!0,onChange:O})]})}),Object(s.jsx)("div",{class:"form-group",children:Object(s.jsxs)("label",{children:["Email",Object(s.jsx)("input",{class:"form-control",type:"email",name:"email",onChange:O,required:!0})]})}),Object(s.jsx)("div",{class:"form-group",children:Object(s.jsxs)("label",{children:["Password",Object(s.jsx)("input",{class:"form-control",type:"password",name:"password",required:!0,onChange:O})]})}),Object(s.jsx)("button",{class:"btn btn-success",type:"submit",children:"Register"})]})})})}}}]);
//# sourceMappingURL=5.470c7e20.chunk.js.map